#!/bin/bash

function EnableCAT() {
	if [[ $1 == 1 ]]; then
            pqos -a "core:0=0" &> /dev/null
            pqos -a "core:1=1-3" &> /dev/null
			wrmsr 0xC90 $2
			wrmsr 0xC91 $3
			wrmsr 0x18b0 $3; wrmsr 0x18b1 $3; wrmsr 0x18b2 $3; wrmsr 0x18b3 $3
	elif [[ $1 == 2 ]]; then
            pqos -a "core:0=0" &> /dev/null
            pqos -a "core:1=1-3" &> /dev/null
			wrmsr 0xC90 $2
			wrmsr 0xC91 $3
			wrmsr 0x18b0 $2; wrmsr 0x18b1 $2; wrmsr 0x18b2 $2; wrmsr 0x18b3 $2
    else
			wrmsr 0xC90 $2
			wrmsr 0xC91 $2
			wrmsr 0x18b0 $2; wrmsr 0x18b1 $2; wrmsr 0x18b2 $2; wrmsr 0x18b3 $2
	fi
}

function BwReadVictimSolo() {
	output=`perf stat -e $count bandwidth -c 0 -m $1 -i $2 -t 0 -x 2>&1` 
	solo=`echo "$output" | grep average | awk 'NF{ print $(NF-7) }'`
	sololat=`echo "$output" | grep average | awk 'NF{ print $(NF-1) }'`
	l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
	l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
	l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
	l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
	echo "Solo, $solo, $sololat, 1.00, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function BwReadVictimCorun() {
	output=`perf stat -e $count bandwidth -c 0 -m $1 -i $2 -t 0 -x 2>&1`
	bw=`echo "$output" | grep average | awk 'NF{ print $(NF-7) }'`
	lat=`echo "$output" | grep average | awk 'NF{ print $(NF-1) }'`
	slowdown=`bc <<< "scale=2; $solo/$bw"`
	l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
	l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
	l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
	l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
	echo "$corunName, $bw, $lat, $slowdown, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function MlpReadVictimSolo() {
	output=`perf stat -e $count latency-mlp -c 0 -m $1 -i $2 -l 12 -x 2>&1`
	solo=`echo "$output" | grep Avg | awk '{ print $3 }'`
    solobw=`echo "$output" | grep bandwidth | awk '{ print $2 }'`
    l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
    l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
    l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
    l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
    l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
    l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
    echo "Solo, $solobw, $solo, 1.00, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function MlpReadVictimCorun() {
	output=`perf stat -e $count latency-mlp -c 0 -m $1 -i $2 -l 12 -x 2>&1`
	lat=`echo "$output" | grep Avg | awk '{ print $3 }'`
    bw=`echo "$output" | grep bandwidth | awk '{ print $2 }'`
    slowdown=`bc <<< "scale=2; $solobw/$bw"`
    l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
    l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
    l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
    l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
    l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
    l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
    echo "$corunName, $bw, $lat, $slowdown, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function GpuWriteVictimSolo() {
    output=`perf stat -e $count gpuwrite -c 0 -m $1 -i $2 -t 60 2>&1` 
	solo=`echo "$output" | grep average | awk 'NF{ print $(NF-7) }'`
	sololat=`echo "$output" | grep average | awk 'NF{ print $(NF-1) }'`
	l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
	l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
	l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
	l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
	echo "Solo, $solo, $sololat, 1.00, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function GpuWriteVictimCorun() {
    output=`perf stat -e $count gpuwrite -c 0 -m $1 -i $2 -t 60 2>&1`
	bw=`echo "$output" | grep average | awk 'NF{ print $(NF-7) }'`
	lat=`echo "$output" | grep average | awk 'NF{ print $(NF-1) }'`
	slowdown=`bc <<< "scale=2; $solo/$bw"`
	l1misses=`echo "$output" | grep "L1-dcache-load-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l1loads=`echo "$output" | grep "L1-dcache-loads" | awk '{ print $1 }' | sed 's/,//g'`
	l1missrate=`echo "$output" | grep "L1-dcache-load-misses" | awk 'NF{ print $(NF-4) }' | sed 's/%//g'`
	l2misses=`echo "$output" | grep "cache-misses" | awk '{ print $1 }' | sed 's/,//g'`
	l2loads=`echo "$output" | grep "cache-references" | awk '{ print $1 }' | sed 's/,//g'`
	l2missrate=`echo "$output" | grep "cache-misses" | awk 'NF{ print $(NF-5) }' | sed 's/%//g'`
	echo "$corunName, $bw, $lat, $slowdown, $l1misses, $l1loads, $l1missrate, $l2misses, $l2loads, $l2missrate"
}

function BwWriteCorun() {
	for ((i=1; i<4; i++)); do
		bandwidth -c $i -m $1 -a write -t 0 -x &> /dev/null &
	done
	corun="bandwidth"
    corunName="BwW($1)"
}

function MlpWriteCorun() {
	for ((i=1; i<4; i++)); do
		latency-mlp -c $i -m $1 -a write -x -l 12 -i 99999999 &> /dev/null &
	done
	corun="latency-mlp"
    corunName="MlpW(${1}*12)"
}

function GpuWriteCorun() {
	gpuwrite -c $1 -m $2 -t 300 &> /dev/null &
	corun="gpuwrite"
    corunName="GpuW($2)"
}

function MemAwareWriteCorun() {
    for ((i=1; i<4; i++)); do
		attacker4 -c $i -m $1 -a write -x -l 12 -i 99999999 -e 0 &> /dev/null &
	done
	corun="attacker4"
    corunName="MemW(${1}*3)"
}